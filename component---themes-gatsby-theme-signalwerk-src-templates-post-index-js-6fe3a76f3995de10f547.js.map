{"version":3,"sources":["webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/templates/Post/index.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/Div/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/Margin/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/Meta/index.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/layout.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/Gallery/index.js"],"names":["BlogPostTemplate","render","post","this","props","data","siteTitle","get","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_8__","location","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","lang","meta","name","content","title","className","_components_Meta__WEBPACK_IMPORTED_MODULE_7__","words","author","date","description","dangerouslySetInnerHTML","__html","html","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_5__","components","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_4__","scope","React","MDXTag","Gallery","_components_Gallery__WEBPACK_IMPORTED_MODULE_9__","Div","_components_Div__WEBPACK_IMPORTED_MODULE_10__","Margin","body","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","slug","rel","Component","__webpack_exports__","pageQuery","children","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","shape","Meta","str","_this$props","timeToRead","Math","react__WEBPACK_IMPORTED_MODULE_2___default","printDate","Date","toLocaleDateString","year","month","day","Template","header","__PATH_PREFIX__","gatsby__WEBPACK_IMPORTED_MODULE_2__","react_slick__WEBPACK_IMPORTED_MODULE_2___default","dots","infinite","speed","autoplaySpeed","autoplay","slidesToShow","slidesToScroll","pauseOnDotsHover"],"mappings":"0RAgBMA,oGACJC,kBACE,IAAMC,EAAOC,KAAAC,MAAAC,KAAbH,KACMI,EAAYC,IAAIJ,KAADC,MAArB,gCACMI,EAAkBN,EAAxBO,QAHOC,EAIoBP,KAAAC,MAJpBO,YAICC,EAJDF,EAAAE,SAIWC,EAJXH,EAAAG,KAMP,OACEC,EAAAC,EAAAC,cAAAC,EAAA,GAAQC,SAAUf,KAAAC,MAAWc,UAC3BJ,EAAAC,EAAAC,cAAAG,EAAAJ,EAAA,CACEK,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAF,cAAuBC,QAAShB,IACvCiB,MAAUvB,cAALuB,MAAA,MAAiCnB,IAGxCQ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,qBACbZ,EAAAC,EAAAC,cAAAW,EAAA,GACEC,MAAO1B,YADT0B,MAEEC,OAAQ3B,cAFV2B,OAGEC,KAAM5B,cAAiB4B,QAG3BhB,EAAAC,EAAAC,cAAA,UAAKd,cAdPuB,OAgBGvB,2BACCY,EAAAC,EAAAC,cAAA,OAAKU,UAAU,gBACbZ,EAAAC,EAAAC,cAAA,MAAIU,UAAU,qBACXxB,cAnBT6B,cAwBEjB,EAAAC,EAAAC,cAAA,OAAKgB,wBAAyB,CAAEC,OAAQ/B,EAAKgC,QAE7CpB,EAAAC,EAAAC,cAAAmB,EAAA,aAAaC,WAAY,IACvBtB,EAAAC,EAAAC,cAAAqB,EAAA,GAAaC,MAAO,CAAEC,MAAFzB,EAAAC,EAASyB,OAATL,EAAA,OAAiBM,QAAjBC,EAAA,EAA0BC,IAA1BC,EAAA,EAA+BC,aAChD3C,OA5BP4C,OAgCEhC,EAAAC,EAAAC,cAAA,KAhCF,MAiCEF,EAAAC,EAAAC,cAAA,UACGJ,GACCE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA+B,EAAA,GAAMC,GAAIpC,SAAVqC,KAAgCC,IAAI,QAApC,KACKtC,cAJXa,QAQGZ,GACCC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA+B,EAAA,GAAMC,GAAInC,SAAVoC,KAA4BC,IAAI,QAC7BrC,cADHY,MA5CV,aAP2Bc,IAAMY,YA8DrCC,EAAA,UAEO,IAAMC,EAAN,mFC5EDV,oGACJ1C,kBACE,OACEa,EAAAC,EAAAC,cAAA,OAAKU,UAAcvB,KAAAC,MAALsB,UAAA,cACXvB,KAAAC,MAFLkD,cAFcf,IAAMY,YAUxBC,EAAA,sCCdA,IAAAG,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAAE,EAAAG,GAAAL,EAAAO,EAAAX,EAAA,sBAAAU,EAAA/C,IAAAyC,EAAA,KAa2BjB,IAAMyB,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,0BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,wECGzCzB,oGACJ5C,kBACE,OACEa,EAAAC,EAAAC,cAAA,OAAKU,UAAU,gBACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBAAiBvB,KAAAC,MAFpCkD,eAFiBf,IAAMY,YAU3BC,EAAA,iHCPMuB,EAAmB,SAAAC,GAAkB,IAAf1D,EAAe0D,EAAf1D,SACpB2D,EAAgBC,UAAOC,4BAA4B7D,EAAS8D,UAClE,OAAKH,EAIEtC,IAAMvB,cAAciE,IAApBC,IAAA,CACLhE,WACA2D,iBACGA,EAAcM,OANV,MAUXR,EAAiBS,UAAY,CAC3BlE,SAAU+C,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,wFCJTW,oGACJrF,kBAAS,IAZOsF,EAYPC,EACyBrF,KADzBC,MACCyB,EADD2D,EAAA3D,OACSC,EADT0D,EAAA1D,KACeF,EADf4D,EAAA5D,MAGD6D,EAAaC,YAAY9D,GAAD,GAjBlC,MAiBI,EAEA,OACE+D,EAAA5E,EAAAC,cAAA,OAAKU,UAAU,2BACZE,GACC+D,EAAA5E,EAAAC,cAAA,QAAMU,UAAU,oBAAhB,IAAA+D,EAAA,OAGEE,EAAA5E,EAAAC,cAAA,QAAMU,UAAU,aALtB,QAAAG,EASE8D,EAAA5E,EAAAC,cAAA,QAAMU,UAAU,aATlB,QAlBY6D,EA4BTK,EA3BY,IAAAC,KAASA,WAA5BN,IACaO,mBAAA,QAAuC,CAClDC,KADkD,UAElDC,MAFkD,OAGlDC,IAAK,aAuBAL,aAXL,UANerD,IAAMY,YAuBzBC,EAAA,mFCzBM8C,iLACJjG,kBAAS,IAGPkG,EAHOX,EACwBrF,KADxBC,MACCc,EADDsE,EAAAtE,SACWoC,EADXkC,EAAAlC,SAYP,MAVoB8C,wBAGhBlF,aACFiF,EACErF,EAAAC,EAAAC,cAAA,MAAIU,UAAU,gBACZZ,EAAAC,EAAAC,cAAAqF,EAAA,GAAMrD,GAAI,KAFdmD,YAOArF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBAAfyE,EADF7C,OAbmBf,IAAMY,YAsB7BC,EAAA,4FCrCMX,oGACJxC,kBAWE,OACEa,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBACbZ,EAAAC,EAAAC,cAAAsF,EAAAvF,EAZa,CACfwF,MADe,EAEfC,UAFe,EAGfC,MAHe,IAIfC,cAJe,KAKfC,UALe,EAMfC,aANe,EAOfC,eAPe,EAQfC,kBAAkB,GAIO3G,KAAAC,MAAAkD,SAAAlD,MAF3BkD,eAZkBf,IAAMY,YAoB5BC,EAAA","file":"component---themes-gatsby-theme-signalwerk-src-templates-post-index-js-6fe3a76f3995de10f547.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\nimport { MDXProvider, MDXTag } from '@mdx-js/tag'\n\nimport get from 'lodash/get'\n\nimport Meta from '../../components/Meta'\nimport Layout from '../../components/layout'\nimport Gallery from '../../components/Gallery'\nimport Div from '../../components/Div'\nimport Margin from '../../components/Margin'\n\nimport './styles.css'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.post\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n\n        <div className=\"post-single__meta\">\n          <Meta\n            words={post.wordCount.words}\n            author={post.frontmatter.author}\n            date={post.frontmatter.date}\n          />\n        </div>\n        <h1>{post.frontmatter.title}</h1>\n\n        {post.frontmatter.description && (\n          <div className=\"column__text\">\n            <h2 className=\"post-single__lead\">\n              {post.frontmatter.description}\n            </h2>\n          </div>\n        )}\n\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n\n        <MDXProvider components={{}}>\n          <MDXRenderer scope={{ React, MDXTag, Gallery, Div, Margin }}>\n            {post.code.body}\n          </MDXRenderer>\n        </MDXProvider>\n\n        <hr />\n        <ul>\n          {previous && (\n            <li>\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            </li>\n          )}\n          {next && (\n            <li>\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            </li>\n          )}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    post: mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      code {\n        body\n      }\n      frontmatter {\n        title\n        author\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      wordCount {\n        words\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './styles.css'\n\nclass Div extends React.Component {\n  render() {\n    return (\n      <div className={`${this.props.className} Div--root`}>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Div\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport './styles.css'\n\nclass Margin extends React.Component {\n  render() {\n    return (\n      <div className=\"Margin--root\">\n        <div className=\"Margin--inner\">{this.props.children}</div>\n      </div>\n    )\n  }\n}\n\nexport default Margin\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nimport './styles.css'\n\n\n// https://help.medium.com/hc/en-us/articles/214991667-Read-time\n// http://iovs.arvojournals.org/article.aspx?articleid=2166061\n// german: words: 179, Characters: 920\nconst avgWPM = 179\n\nconst printDate = str => {\n  const parsedDate = new Date(Date.parse(str))\n  const date = parsedDate.toLocaleDateString('de-CH', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  })\n\n  return date\n}\n\nclass Meta extends React.Component {\n  render() {\n    const { author, date, words } = this.props\n\n    const timeToRead = Math.round((words || 1) / avgWPM) || 1\n\n    return (\n      <div className=\"column__text Meta--root\">\n        {words && (\n          <span className=\"Meta--timeToRead\">\n            ~{timeToRead}\n            &nbsp;min\n            <span className=\"Meta--dot\"> · </span>\n          </span>\n        )}\n        {author}\n        <span className=\"Meta--dot\"> · </span>\n        {printDate(date).replace(/ /g, '\\u00a0')}\n      </div>\n    )\n  }\n}\n\nexport default Meta\n","/* eslint-disable */\nimport React from 'react'\nimport { Link } from 'gatsby'\n\nimport './App/css/fonts-var.css'\nimport './App/css/fonts.css'\nimport './Html/styles.css'\nimport './Headings/styles.css'\nimport './List/styles.css'\nimport './Grid/styles.css'\nimport './P/styles.css'\nimport './Table/styles.css'\nimport './A/styles.css'\nimport './Img/styles.css'\nimport './Video/styles.css'\n\nimport './style.css'\n\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname !== rootPath) {\n      header = (\n        <h3 className=\"layout--home\">\n          <Link to={'/'}>← Home</Link>\n        </h3>\n      )\n    }\n    return (\n      <div className=\"layout--content\">\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react'\nimport Slider from 'react-slick'\nimport './styles.css'\n\nclass Gallery extends React.Component {\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      autoplaySpeed: 2500,\n      autoplay: true,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      pauseOnDotsHover: true,\n    }\n    return (\n      <div className=\"Gallery--root\">\n        <Slider {...settings}>{this.props.children.props.children}</Slider>\n      </div>\n    )\n  }\n}\n\nexport default Gallery\n"],"sourceRoot":""}