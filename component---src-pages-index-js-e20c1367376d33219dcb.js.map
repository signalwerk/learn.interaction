{"version":3,"sources":["webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/pages/index.js","webpack:///./src/pages/index.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/Div/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/Meta/index.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/layout.js","webpack:////home/travis/build/signalwerk/learn.interaction/themes/gatsby-theme-signalwerk/src/components/Gallery/index.js"],"names":["pages","render","siteTitle","get","this","siteDescription","posts","post","react_default","a","createElement","layout","location","props","Helmet_default","htmlAttributes","lang","meta","name","content","title","Fragment","className","dangerouslySetInnerHTML","__html","html","dist","components","mdx_renderer","scope","React","MDXTag","Gallery","Div","body","map","_ref","node","key","slug","gatsby_browser_entry","to","Meta","author","date","description","excerpt","Component","IndexRoot","homeQuery","react__WEBPACK_IMPORTED_MODULE_1___default","children","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","shape","str","_this$props","words","timeToRead","Math","react__WEBPACK_IMPORTED_MODULE_2___default","printDate","Date","toLocaleDateString","year","month","day","Template","header","__PATH_PREFIX__","gatsby__WEBPACK_IMPORTED_MODULE_2__","react_slick__WEBPACK_IMPORTED_MODULE_2___default","dots","infinite","speed","autoplaySpeed","autoplay","slidesToShow","slidesToScroll","pauseOnDotsHover"],"mappings":"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","file":"component---src-pages-index-js-e20c1367376d33219dcb.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\nimport { MDXProvider, MDXTag } from '@mdx-js/tag'\n\nimport Meta from '../components/Meta'\nimport Layout from '../components/layout'\nimport Gallery from '../components/Gallery'\nimport Div from '../components/Div'\nimport './styles.css'\n\nclass Index extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.posts.edges')\n    const post = get(this, 'props.data.post')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n\n        {post && (\n          <React.Fragment className=\"Index--item\">\n            <h1>{post.frontmatter.title}</h1>\n\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n\n            <MDXProvider components={{}}>\n              <MDXRenderer scope={{ React, MDXTag, Gallery, Div }}>\n                {post.code.body}\n              </MDXRenderer>\n            </MDXProvider>\n          </React.Fragment>\n        )}\n\n        {posts &&\n          posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || '--no title--'\n            return (\n              <div className=\"Index--item\" key={node.fields.slug}>\n                <h2 className=\"Index--title\">\n                  <Link to={node.fields.slug}>{title}</Link>\n                </h2>\n                <div className=\"Index--meta\">\n                  <Meta\n                    author={node.frontmatter.author}\n                    date={node.frontmatter.date}\n                  />\n                </div>\n                {(node.frontmatter.description && (\n                  <p>{node.frontmatter.description}</p>\n                )) || <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />}\n              </div>\n            )\n          })}\n      </Layout>\n    )\n  }\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        authorUrl\n      }\n    }\n    post: mdx(fields: {slug: {eq: \"root\"}}) {\n      id\n      excerpt\n      code {\n        body\n      }\n      frontmatter {\n        title\n        author\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      wordCount {\n        words\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true }, hideInMenu: { ne: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            author\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import  React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Index from \"gatsby-theme-signalwerk/src/pages\";\n\n\nclass IndexRoot extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Index {...this.props} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default IndexRoot\n\nexport const homeQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        authorUrl\n      }\n    }\n    post: mdx(fields: {slug: {eq: \"root\"}}) {\n      id\n      excerpt\n      code {\n        body\n      }\n      frontmatter {\n        title\n        author\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      wordCount {\n        words\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport './styles.css'\n\nclass Div extends React.Component {\n  render() {\n    return (\n      <div className={`${this.props.className} Div--root`}>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Div\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nimport './styles.css'\n\n\n// https://help.medium.com/hc/en-us/articles/214991667-Read-time\n// http://iovs.arvojournals.org/article.aspx?articleid=2166061\n// german: words: 179, Characters: 920\nconst avgWPM = 179\n\nconst printDate = str => {\n  const parsedDate = new Date(Date.parse(str))\n  const date = parsedDate.toLocaleDateString('de-CH', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  })\n\n  return date\n}\n\nclass Meta extends React.Component {\n  render() {\n    const { author, date, words } = this.props\n\n    const timeToRead = Math.round((words || 1) / avgWPM) || 1\n\n    return (\n      <div className=\"column__text Meta--root\">\n        {words && (\n          <span className=\"Meta--timeToRead\">\n            ~{timeToRead}\n            &nbsp;min\n            <span className=\"Meta--dot\"> · </span>\n          </span>\n        )}\n        {author}\n        <span className=\"Meta--dot\"> · </span>\n        {printDate(date).replace(/ /g, '\\u00a0')}\n      </div>\n    )\n  }\n}\n\nexport default Meta\n","/* eslint-disable */\nimport React from 'react'\nimport { Link } from 'gatsby'\n\nimport './App/css/fonts-var.css'\nimport './App/css/fonts.css'\nimport './Html/styles.css'\nimport './Headings/styles.css'\nimport './List/styles.css'\nimport './Grid/styles.css'\nimport './P/styles.css'\nimport './Table/styles.css'\nimport './A/styles.css'\nimport './Img/styles.css'\nimport './Video/styles.css'\n\nimport './style.css'\n\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname !== rootPath) {\n      header = (\n        <h3 className=\"layout--home\">\n          <Link to={'/'}>← Home</Link>\n        </h3>\n      )\n    }\n    return (\n      <div className=\"layout--content\">\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react'\nimport Slider from 'react-slick'\nimport './styles.css'\n\nclass Gallery extends React.Component {\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      autoplaySpeed: 2500,\n      autoplay: true,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      pauseOnDotsHover: true,\n    }\n    return (\n      <div className=\"Gallery--root\">\n        <Slider {...settings}>{this.props.children.props.children}</Slider>\n      </div>\n    )\n  }\n}\n\nexport default Gallery\n"],"sourceRoot":""}